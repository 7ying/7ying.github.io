<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>7ying</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://7ying.github.io/"/>
  <updated>2020-04-25T08:04:17.143Z</updated>
  <id>http://7ying.github.io/</id>
  
  <author>
    <name>7ying</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>node7</title>
    <link href="http://7ying.github.io/2020/05/05/node7/"/>
    <id>http://7ying.github.io/2020/05/05/node7/</id>
    <published>2020-05-05T10:04:27.557Z</published>
    <updated>2020-04-25T08:04:17.143Z</updated>
    
    <content type="html"><![CDATA[<p>Lecture Notes: 4.22-Git与Github使用初步<br>Recap</p><p>-SSH架构远程管理的运维体系</p><p>-SCP、Remote for VS Code远程编辑</p><p>-NAT配置问题</p><p>1、Git</p><p>版本控制系统（Version Control System, VCS）</p><p>其它VCS: CVS, Subersion, Visual source safe</p><p>开源共享，可以自架服务器，同时使用客户端访问与应用</p><p>专用的第三方的Git服务，相当于租用了别人的Git服务器，在上面创建软件仓库并进行版本管理。</p><p>典型的Git服务：Github，Gitlab</p><p>2、Git中的基本概念</p><p>-仓库：相当于一个托管的单位，一般对应一个项目</p><p>-版本： 仓库中的文件的某一个状态</p><p>3、Git安装</p><p>Ubuntu或者Raspbian OS：</p><p>apt-get/apt install git</p><p>4、Git的身份认证</p><p>一般情况下采用SSH或PGP密钥认证的方式。</p><p>参考：SSH的免密登录</p><p>5、创建Git仓库</p><p><span class="exturl"><a class="exturl__link"   href="https://github.com/"  target="_blank" rel="noopener">https://github.com/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 注册一个账号</p><p>Repositories（仓库）中选择New</p><p>仓库地址：</p><p><span class="exturl"><a class="exturl__link"   href="https://github.com/scratchzjnu/zjnumaker.git"  target="_blank" rel="noopener">https://github.com/scratchzjnu/zjnumaker.git</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p><span class="exturl"><a class="exturl__link"   href="mailto:git@github.com" >git@github.com</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>:scratchzjnu/zjnumaker.git</p><p>6、Git初始化配置</p><p>提前准备用户名、邮箱：scratchzjnu, <span class="exturl"><a class="exturl__link"   href="mailto:service@ilester.net" >service@ilester.net</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>git config –global user.name “用户名”</p><p>git config –global user.email “邮箱”</p><p>ssh-keygen -t rsa -C “邮箱”</p><p>cat ~/.ssh/id_rsa.pub并将输出的内容添加到Github账户/setttings/ssh and gpg keys</p><p>7、初始化仓库</p><p>创建一个用作本地存储的仓库目录</p><p>git init（会初始化仓库，相关配置在.git下）</p><p>注意：.git文件尽量不要修改</p><p>8、将文件添加到仓库并提交</p><p>前置：创建一个文件，例如：readme.md</p><p>git add readme.md</p><p>git commit -am “开发日志”</p><p>git status</p><p>9、查看文件的版本记录</p><p>git log 文件名查看</p><p>commit 后面的标识即为版本号</p><p>10、回退版本</p><p>git checkout 版本号 文件名</p><p>git </p><p>11、将文件上传到Git服务器</p><p>前置：需要找到Git仓库地址，配置好SSH或GPG密钥</p><p>git remote add origin github上的地址</p><p>12、通常操作</p><p>单用户：</p><p>本地修改文件</p><p>git add </p><p>git commit </p><p>git push </p><p>要求：项目名称均为 用户名.github.io</p><p>scratchzjnu/scratchzjnu.github.io</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Lecture Notes: 4.22-Git与Github使用初步&lt;br&gt;Recap&lt;/p&gt;
&lt;p&gt;-SSH架构远程管理的运维体系&lt;/p&gt;
&lt;p&gt;-SCP、Remote for VS Code远程编辑&lt;/p&gt;
&lt;p&gt;-NAT配置问题&lt;/p&gt;
&lt;p&gt;1、Git&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>node6</title>
    <link href="http://7ying.github.io/2020/05/05/node6/"/>
    <id>http://7ying.github.io/2020/05/05/node6/</id>
    <published>2020-05-05T10:04:20.785Z</published>
    <updated>2020-04-27T13:47:47.355Z</updated>
    
    <content type="html"><![CDATA[<p>Recep</p><p>1、解决新建用户无法使用sudo</p><p>原理：只有在sudo组，成为成员才可以使用</p><p>具有sudo组权限，称为sudoer</p><p>usermod更改用户的组信息</p><p> sudo usermod -a -G sudo roy</p><p>2、远程拷贝文件</p><p>答案：scp</p><p>远程文件传输的几种方案</p><p>1、SCP</p><p>2、SCP的扩展应用：WinSCP</p><p>3、SFTP:可以理解从SSH通道走的FTP</p><p>可以使用的客户端：WinSCP,Filezilla</p><p>建议：Windows中使用Chocolatey，</p><p>4、远程修改</p><p>场景：需要修改远程主机上的某个文件</p><p>解决方案：a, ssh登录并用nano,vi编辑</p><p>b, 先用Scp,winscp等下载文件，再上传文件</p><p>3, 在本地的文件编辑器中添加远程编辑的功能</p><p>c, 用本地编辑器的远程修改插件</p><p>示例：VS Code + Remote SSH </p><p>1，在VSCode插件目录中搜索并安装Remote-SSH</p><p>2， 添加主机，Ctrl +Shift +P， Remote ssh - add a new host，添加后会出现在ssh targets。</p><p>3，在主机项上右键，connect …</p><p>4, Open folder，打开远程主机上的某个目录</p><p>Extra： VirtualBox中客户机（ubuntu）与主机(win10)的文件共享</p><p>1，安装增强功能</p><p>点虚拟机菜单中的“安装增强功能”</p><p>自动运行光盘中的启动程序</p><p>重启虚拟机</p><p>2、添加共享文件夹</p><p>共享文件夹路径：Win10上的某一个目录</p><p>共享文件夹名称：随意</p><p>建议选项：自动挂载、固定分配</p><p>挂载点：一般放在/media/目录下，如/media/shared</p><p>有可能出现的问题，打开挂载点时提示无权限</p><p>原因：所用的用户不在vboxsf组</p><p>vobxsf: virtual box shared folder</p><p>sudo usermod -a -G vboxsf username</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Recep&lt;/p&gt;
&lt;p&gt;1、解决新建用户无法使用sudo&lt;/p&gt;
&lt;p&gt;原理：只有在sudo组，成为成员才可以使用&lt;/p&gt;
&lt;p&gt;具有sudo组权限，称为sudoer&lt;/p&gt;
&lt;p&gt;usermod更改用户的组信息&lt;/p&gt;
&lt;p&gt; sudo usermod -a -G su
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>node5</title>
    <link href="http://7ying.github.io/2020/05/05/node5/"/>
    <id>http://7ying.github.io/2020/05/05/node5/</id>
    <published>2020-05-05T10:04:14.512Z</published>
    <updated>2020-04-27T13:48:30.203Z</updated>
    
    <content type="html"><![CDATA[<p>一、Recap: 权限</p><p>r:读</p><p>w:写</p><p>x：执行</p><p>1:类型</p><p>后9位每3个一组</p><p>第1组：所有者，RWX</p><p>第2组：所在组,RWX</p><p>第3组：其它用户,RWX</p><p>rw-r–r–: 110 100 100</p><p>rwxr-xr-x: 111 101 101</p><p>最大的是：7</p><p>最小的是：0</p><p>rwxrwxrwx: 777 （Web程序的上传目录）</p><p>———–：000</p><p>只读：R–,100，4</p><p>读写：RW-,110，6</p><p>读取与执行：R-X，101，5</p><p>所有权限：7</p><p>a, chmod的两种方法</p><p>chmod +/- rwx filename/directory</p><p>chmod mask filename/directory</p><p>b, 权限掩码以及原理</p><p>二、用户管理常用命令</p><p>1、创建、删除组</p><p>groupadd:</p><p>groupdel:</p><p>tip: 创建新用户时，会自动创建同名用户组</p><p>2、查看组信息</p><p>cat /etc/group</p><p>3、修改文件或目录的所在组</p><p>sudo chgrp 组名 文件或目录</p><p>-默认不修改子目录组信息，要递归修改：</p><p>chgrp -R 组名 目录名</p><p>4、添加用户</p><p>useradd</p><p>-g:设置所在用户组</p><p>-m :自动创建家目录</p><p>5、查看用户信息</p><p>cat /etc/passwd</p><p>cat /etc/passwd | grep 用户名</p><p>lester:   x:  1000:  1000:  Lester,,,  :   /home/lester  :/bin/bash</p><p>lester:用户名</p><p>x:已经设置密码</p><p>1000：用户标识</p><p>1000: 组标识</p><p>Lester: 用户名</p><p>/home/lester: 家目录</p><p>/bin/bash： 登录时使用的bash</p><p>6、设置用户密码</p><p>passwd 用户名</p><p>不跟用户名，修改自己的密码</p><p>7、删除用户</p><p>userdel 用户名</p><p>-r: 删除用户时，同时删除家目录</p><p>8、查看id</p><p>方法一： cat /etc/passwd | grep 用户名</p><p>方法二：id </p><p>id 用户名：显示特定用户的标识</p><p>id ：显示当前用户的标识</p><p>9、查看当前登录的用户</p><p>who</p><p>：0表示当前终端</p><p>10、查看当前用户的账号名</p><p>whoami</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、Recap: 权限&lt;/p&gt;
&lt;p&gt;r:读&lt;/p&gt;
&lt;p&gt;w:写&lt;/p&gt;
&lt;p&gt;x：执行&lt;/p&gt;
&lt;p&gt;1:类型&lt;/p&gt;
&lt;p&gt;后9位每3个一组&lt;/p&gt;
&lt;p&gt;第1组：所有者，RWX&lt;/p&gt;
&lt;p&gt;第2组：所在组,RWX&lt;/p&gt;
&lt;p&gt;第3组：其它用户,RWX&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>node3</title>
    <link href="http://7ying.github.io/2020/05/05/node3/"/>
    <id>http://7ying.github.io/2020/05/05/node3/</id>
    <published>2020-05-05T10:04:01.295Z</published>
    <updated>2020-04-27T13:48:58.265Z</updated>
    
    <content type="html"><![CDATA[<p>sudo apt-get install openssh-server</p><p>sudo /etc/init.d/ssh start</p><p>sudo /etc/init.d/ssh stop</p><p>ssh客户端</p><p>-Linux,Mac所有版本自带ssh</p><p>-Windows 7开始自带ssh</p><p>-第三方工具：</p><pre><code>XshellPutty</code></pre><p>ssh远程登录格式</p><p>ssh [-p port] username @ host</p><p>username:lester</p><p>password:zjnu1234</p><p>host: 192.168.56.1 (NAT=&gt;10.0.2.15)</p><p>一、SSH配置免密码登录</p><p>1、原理：</p><p>a.生成一个密钥对，在客户机上存放私钥，在服务器上存放公钥</p><p>b. 每次登录时，取私钥并与服务器上的公钥配对，配对成功表示认证通过</p><p>2、步骤</p><p>Q1: 如何生成？</p><p>ssh-keygen(key generator): 根据机器的特征值生成id_rsa，id_rsa.pub</p><p>Q2：生成后的密钥存放在何处？</p><p>存放在用户目录下的.ssh</p><p>Q3：服务器如何配置</p><p>任务：id_rsa.pub文件的内容添加到远程主机.ssh目录下的authorized_keys文件</p><p>01、Linux系统中</p><p>ssh-copy-id [-p port] username@host</p><p>02、Windows</p><p>a. 可视化方式复制</p><p>b. </p><p>scp: secure copy，用于远程的安全拷贝</p><p>scp [-P port] 本地文件 username@host：Desktop/01.py</p><p>cat id_rsa.pub &gt;~/.ssh/authorized_keys</p><p>SCP扩展</p><p>1、本地文件上传至服务器</p><p>2、远程文件下载到本地</p><p>任务：将远程主机Desktop下的hello.py下载</p><p> scp -P 22 <span class="exturl"><a class="exturl__link"   href="mailto:lester@192.168.56.1" >lester@192.168.56.1</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>:Desktop/hello.py hello_world.py</p><p>3、将本地文件夹上传至服务器</p><p>scp -r zjnu <span class="exturl"><a class="exturl__link"   href="mailto:lester@192.168.56.1" >lester@192.168.56.1</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>:Desktop</p><p>4、将远程文件夹下载至本地</p><p>scp -r <span class="exturl"><a class="exturl__link"   href="mailto:lester@192.168.56.1" >lester@192.168.56.1</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>:Desktop/01 01_copy</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sudo apt-get install openssh-server&lt;/p&gt;
&lt;p&gt;sudo /etc/init.d/ssh start&lt;/p&gt;
&lt;p&gt;sudo /etc/init.d/ssh stop&lt;/p&gt;
&lt;p&gt;ssh客户端&lt;/p&gt;
&lt;p&gt;-Linux,Mac所有版
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>note1</title>
    <link href="http://7ying.github.io/2020/05/05/note1/"/>
    <id>http://7ying.github.io/2020/05/05/note1/</id>
    <published>2020-05-05T09:46:45.000Z</published>
    <updated>2020-05-05T09:49:27.567Z</updated>
    
    <content type="html"><![CDATA[        <h3 id="通配符"   >          <a href="#通配符" class="heading-link"><i class="fas fa-link"></i></a>通配符</h3>      <p>*:任意字符，包括0</p><p>?:任意一个字符，至少1个</p><p>[]:表示范围， [abc]表示a,b,c，[a-f].[0-9]</p>        <h3 id="查询帮助"   >          <a href="#查询帮助" class="heading-link"><i class="fas fa-link"></i></a>查询帮助</h3>      <p>Win: 帮助菜单、F1</p><p>Linux:</p><ul><li>参数： –help，一次性显示所有帮助信息</li></ul><p>-命令： man , manual</p><p>–格式： man 命令（空格下一屏，b上一屏，q退出）</p>        <h3 id="复制文件"   >          <a href="#复制文件" class="heading-link"><i class="fas fa-link"></i></a>复制文件</h3>      <p>cp:</p><p>-格式：cp  源文件路径 目标路径</p><p>-r参数，递归复制子目录和文件，只跟目录</p>        <h3 id="移动文件"   >          <a href="#移动文件" class="heading-link"><i class="fas fa-link"></i></a>移动文件</h3>      <p>-格式：mv 源文件名 目标路径</p><p>-可以用mv重命名文件</p><p>-移动子目录和文件，不需要加-r</p><p>实践：桌面上，配合tree练习</p>        <h3 id="查看文件内容：cat"   >          <a href="#查看文件内容：cat" class="heading-link"><i class="fas fa-link"></i></a>查看文件内容：cat</h3>      <p>-catalog缩写</p><p>-格式：cat 文件名</p><p>-参数： -b ,对非空行编号</p><p>-参数：-n ，对所有行编号</p>        <h3 id="查看文件内容：more"   >          <a href="#查看文件内容：more" class="heading-link"><i class="fas fa-link"></i></a>查看文件内容：more</h3>      <p>-分屏显示</p><p>-操作方式：空格下一屏，b上一屏，q退出</p>        <h3 id="搜索：grep"   >          <a href="#搜索：grep" class="heading-link"><i class="fas fa-link"></i></a>搜索：grep</h3>      <ul><li>格式： grep 字符串 文件</li></ul><p>-字符串中有空格，用引号，</p><p>-n: 对搜索出来的结果进行编号</p><p>-v: 显示不匹配的行</p><p>-i: 不区分大小写</p><p>^:行的开头</p><p>$：行的结尾</p>        <h3 id="显示命令：echo"   >          <a href="#显示命令：echo" class="heading-link"><i class="fas fa-link"></i></a>显示命令：echo</h3>      <p>通常是搭配管道使用：重定向</p><p>输出并覆盖原始内容 &gt;</p><p>输出并追加至原始内容 &gt;&gt;</p><p>|:表示一个命令的输出作为另一个命令的输入</p><p>示例： ls -alh ~ | more</p><p>示例： ls -alh ~ | grep P</p>]]></content>
    
    <summary type="html">
    
      
      
        
        &lt;h3 id=&quot;通配符&quot;   &gt;
          &lt;a href=&quot;#通配符&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;通配符&lt;/h3&gt;
      &lt;p&gt;*:任意字符，包括0&lt;/p&gt;
&lt;p&gt;?
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>note4</title>
    <link href="http://7ying.github.io/2020/05/05/node4/"/>
    <id>http://7ying.github.io/2020/05/05/node4/</id>
    <published>2020-05-04T16:00:00.000Z</published>
    <updated>2020-05-05T14:01:35.837Z</updated>
    
    <content type="html"><![CDATA[<p>1、别名登录</p><p>给我们访问的远程主机设置一个容易记性的别名</p><p>类似于：域名VS IP地址</p><p>不同点：域名需要在DNS注册，别名在本机注册</p><p>Windows方法：</p><p>（1).ssh下新建文件config</p><p>（2）config中配置别名</p><p>Host ubuntu</p><p>  HostName 192.168.56.1</p><p>  User lester</p><p>  Port 22</p><p>（3）别名登录：ssh user@别名</p><p>2、用户权限</p><p>ls-l为例</p><p>lester@ubuntu:~/Desktop$ ls -lh</p><p>总用量 28K</p><p>drwxr-xr-x 4 lester lester 4.0K 3月  11 09:51 01</p><p>-rw-rw-r– 1 lester lester   62 4月   1 09:45 config.txt</p><p>-rw-r–r– 1 lester lester  599 3月  11 10:17 def.txt</p><p>-rw-r–r– 1 lester lester  779 3月  11 10:10 hello.py</p><p>-rw-rw-r– 1 lester lester  405 3月  25 09:36 id_rsa.pub</p><p>-rw-r–r– 1 lester lester  599 3月  11 10:19 world.py</p><p>drwxrwxr-x 3 lester lester 4.0K 3月  25 09:49 zjnu</p><p>依次：权限标识符、硬链接数、用户与组、文件容量、最后修改日期、名称</p><p>d rwx rwx r-x</p><p>（1)权限标识符：10位</p><p>第一位：d/- （类别，d表示目录-表示文件）</p><p>后九位：</p><p>-第一组RWX：拥有者的权限</p><p>-第二组RWX：所在组的权限</p><p>-第三组RWX：其它人的权限</p><p>R: 可读</p><p>W：可写</p><p>X:可执行</p><p>（2)chmod</p><p>格式： chmod +/- rwx 文件名</p><p>示例：文件夹的可执行权限</p><p>示例：文件加可执行权限（Python脚本、shell脚本）</p><p>3、超级用户</p><p>Linux用户类型：</p><p>-root用户：用于系统维护，具有所有权限</p><p>-绝大多数的Linux发行版不推荐使用root</p><p>-安装时创建的为标准用户</p><p>sudo</p><p>-su: substitude user替换用户</p><p>-预设的身份是root</p><p>-需要输入密码，有5分钟有效期</p><p>-如果未经授权尝试使用root,会发送警告</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、别名登录&lt;/p&gt;
&lt;p&gt;给我们访问的远程主机设置一个容易记性的别名&lt;/p&gt;
&lt;p&gt;类似于：域名VS IP地址&lt;/p&gt;
&lt;p&gt;不同点：域名需要在DNS注册，别名在本机注册&lt;/p&gt;
&lt;p&gt;Windows方法：&lt;/p&gt;
&lt;p&gt;（1).ssh下新建文件config&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>note2</title>
    <link href="http://7ying.github.io/2020/05/05/note2/"/>
    <id>http://7ying.github.io/2020/05/05/note2/</id>
    <published>2020-05-04T16:00:00.000Z</published>
    <updated>2020-05-05T13:56:19.995Z</updated>
    
    <content type="html"><![CDATA[<p>远程管理相关命令</p><p>Ctrl+Alt+T:启动终端</p><p>（一）shutdown：</p><p>1、默认一分钟关机</p><p>2、取消: shutdown -c</p><p>3、shutdown -r 重启</p><p>4、定时任务： +num; hh:mm, now</p><p>远程管理时尽量不要关机或重启</p><p>（二）ifconfig</p><p>1、ifconfig</p><p>2、ifconfig | grep inet</p><p>(三）ping </p><p>默认一直发送数据包</p><p>按CTRL+C中止</p><p>（四）ssh</p><p>Linux中非常常用的一个工具，可以利用SSH客户端登录SSH服务器</p><p>Windows下的Xshell-》 Linux上的SSH服务器</p><p>SSH端口：默认22</p><p>Windows下的常用的ssh客户端：putty、xshell，secureCRT。</p><p>Windows10自带了ssh命令行客户端</p><p>所有类Unix系统均自带ssh命令行</p><p>host=192.168.56.1</p><p>p=22</p><p>user= lester</p><p>pwd=..</p><p>格式：ssh -p port user@host</p><p>1、在Linux上安装ssh服务器</p><p>openssh-server包</p><p>sudo /etc/init.d/ssh start</p><p>sudo /etc/init.d/ssh stop</p><p>2、要深入理解计算机网络，特别是NAT</p><p>主要两种情况：</p><p>a，桥接网络（家里路由器开通了DHCP推荐）</p><p>virtual 、host处于同一个网段</p><p>用ipconfig 查出当前的地址</p><p>hostname = inet地址</p><p>b,NAT或NAT网络</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;远程管理相关命令&lt;/p&gt;
&lt;p&gt;Ctrl+Alt+T:启动终端&lt;/p&gt;
&lt;p&gt;（一）shutdown：&lt;/p&gt;
&lt;p&gt;1、默认一分钟关机&lt;/p&gt;
&lt;p&gt;2、取消: shutdown -c&lt;/p&gt;
&lt;p&gt;3、shutdown -r 重启&lt;/p&gt;
&lt;p&gt;4、定时任务： +num
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
